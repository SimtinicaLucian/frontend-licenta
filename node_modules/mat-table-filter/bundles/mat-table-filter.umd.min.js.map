{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mat-table-filter/lib/mat-table-filter.enum.ts","ng://mat-table-filter/lib/services/filter-predicate.ts","ng://mat-table-filter/lib/services/array-predicate.service.ts","ng://mat-table-filter/lib/services/alpha-numeric-predicate.service.ts","ng://mat-table-filter/lib/services/mat-table-filter.service.ts","ng://mat-table-filter/lib/mat-table-filter.directive.ts","ng://mat-table-filter/lib/mat-table-filter.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","MatTableFilter","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","FilterPredicate","executeCondition","itemPair","options","handleLetterCasing","caseSensitive","filterType","EQUALS","equals","ANYWHERE","anywhere","STARTS_WITH","startsWith","ENDS_WITH","endsWith","transformAllLowerCase","object","LODASH.isString","toLowerCase","ArrayPredicateService","_super","warn","console","ArrayPredicateService_1","UNSUPPORTED_OPERATION_WARNING","SUGGESTION_WARNING","LODASH.isEqual","example","sort","item","isSubset","LODASH.difference","LODASH.flatten","Injectable","providedIn","AlphaNumericPredicateService","includes","MatTableFilterService","_alphaNumericService","_arrayService","filterPredicate","propertyOptions","commonOptions","propertyName","exampleKeys","keys","exampleKeys_1","exampleKeys_1_1","exampleValue","LODASH.cloneDeep","LODASH.isNil","LODASH.every","LODASH.isEmpty","itemValue","nextPropertyName","getNextPropertyName","finalizeOptionsForProperty","isFunction","columnOptions","isAlphaNumeric","valuePair","toString","LODASH.isArray","LODASH.isBoolean","isChanged","oldEntity","newEntity","toPlainJson","JSON","parse","stringify","LODASH.isNumber","MatTableFilterDirective","_filterService","_table","debounceTime","initDebounceSubject","ngDoCheck","_oldExampleEntity","exampleEntity","_exampleEntitySubject","undefined","_this","BehaviorSubject","pipe","subscribe","_","updateFilterPredicate","matDataSource","getMatDataSource","getFilterPredicate","filter","customPredicate","dataSource","MatTable","type","Host","Self","Optional","Input","Directive","selector","exportAs","MatTableFilterModule","NgModule","declarations","imports","MatTableModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum MatTableFilter {\r\n  EQUALS = 'EQUALS',\r\n  ANYWHERE = 'ANYWHERE',\r\n  STARTS_WITH = 'STARTS_WITH',\r\n  ENDS_WITH = 'ENDS_WITH'\r\n}\r\n","import { MatTableFilter } from '../mat-table-filter.enum';\r\nimport { ItemPair } from '../item-pair';\r\nimport * as LODASH from 'lodash';\r\nimport { Options } from '../options';\r\n\r\nexport abstract class FilterPredicate<T> {\r\n\r\n  public abstract equals(itemPair: ItemPair<T>): boolean;\r\n  public abstract anywhere(itemPair: ItemPair<T>): boolean;\r\n  public abstract startsWith(itemPair: ItemPair<T>): boolean;\r\n  public abstract endsWith(itemPair: ItemPair<T>): boolean;\r\n\r\n  public executeCondition(itemPair: ItemPair<T>, options: Options): boolean {\r\n    this.handleLetterCasing(itemPair, options.caseSensitive);\r\n    switch (options.filterType) {\r\n      case MatTableFilter.EQUALS:\r\n        return this.equals(itemPair);\r\n      case MatTableFilter.ANYWHERE:\r\n        return this.anywhere(itemPair);\r\n      case MatTableFilter.STARTS_WITH:\r\n        return this.startsWith(itemPair);\r\n      case MatTableFilter.ENDS_WITH:\r\n        return this.endsWith(itemPair);\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  private handleLetterCasing(itemPair: ItemPair<any>, caseSensitive: boolean): void {\r\n    if (!caseSensitive) {\r\n      this.transformAllLowerCase(itemPair);\r\n    }\r\n  }\r\n\r\n  private transformAllLowerCase(object: any) {\r\n    // tslint:disable-next-line:forin\r\n    for (const key in object) {\r\n      const value = object[key];\r\n      if (LODASH.isString(value)) {\r\n        object[key] = value.toLowerCase();\r\n      } else {\r\n        this.transformAllLowerCase(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FilterPredicate } from './filter-predicate';\r\nimport * as LODASH from 'lodash';\r\nimport { ItemPair } from '../item-pair';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArrayPredicateService extends FilterPredicate<Array<any>> {\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  private static readonly UNSUPPORTED_OPERATION_WARNING = 'This filterType is unsupported for array filtering. FilterType.ANYWHERE is executed instead!';\r\n  private static readonly SUGGESTION_WARNING = 'You can set a custom predicate for the array property through PropertyOptions!';\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  private static warn() {\r\n    console.warn(ArrayPredicateService.UNSUPPORTED_OPERATION_WARNING);\r\n    console.warn(ArrayPredicateService.SUGGESTION_WARNING);\r\n  }\r\n\r\n  public equals(itemPair: ItemPair<Array<any>>): boolean {\r\n    return LODASH.isEqual(itemPair.example.sort(), itemPair.item.sort());\r\n  }\r\n  public anywhere(itemPair: ItemPair<Array<any>>): boolean {\r\n    return this.isSubset(itemPair.example, itemPair.item);\r\n  }\r\n  public startsWith(itemPair: ItemPair<Array<any>>): boolean {\r\n    ArrayPredicateService.warn();\r\n    return this.anywhere(itemPair);\r\n  }\r\n  public endsWith(itemPair: ItemPair<Array<any>>): boolean {\r\n    ArrayPredicateService.warn();\r\n    return this.anywhere(itemPair);\r\n  }\r\n\r\n  private isSubset(example: Array<any>, item: Array<any>): boolean {\r\n    return !LODASH.difference(LODASH.flatten(example), LODASH.flatten(item)).length;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FilterPredicate } from './filter-predicate';\r\nimport { ItemPair } from '../item-pair';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlphaNumericPredicateService extends FilterPredicate<string> {\r\n\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  public equals(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.example === itemPair.item;\r\n  }\r\n  public anywhere(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.includes(itemPair.example);\r\n  }\r\n  public startsWith(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.startsWith(itemPair.example);\r\n  }\r\n  public endsWith(itemPair: ItemPair<string>): boolean {\r\n    return itemPair.item.endsWith(itemPair.example);\r\n  }\r\n\r\n}\r\n","import { PropertyOptions, PredicateFunc } from '../property-options';\r\nimport { ItemPair } from './../item-pair';\r\nimport { ArrayPredicateService } from './array-predicate.service';\r\nimport { AlphaNumericPredicateService } from './alpha-numeric-predicate.service';\r\nimport { Injectable } from '@angular/core';\r\nimport * as LODASH from 'lodash';\r\nimport { Options } from '../options';\r\nimport { isFunction } from 'util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatTableFilterService {\r\n  constructor(private _alphaNumericService: AlphaNumericPredicateService, private _arrayService: ArrayPredicateService) {}\r\n\r\n  public filterPredicate(itemPair: ItemPair<any>, propertyOptions: PropertyOptions,\r\n                         commonOptions: Options | PredicateFunc, propertyName?: string): boolean {\r\n    // tslint:disable-next-line:forin\r\n    const exampleKeys = Object.keys(itemPair.example);\r\n    for (const key of exampleKeys) {\r\n      const exampleValue = LODASH.cloneDeep(itemPair.example[key]);\r\n      if (LODASH.isNil(exampleValue) || LODASH.every(exampleValue, LODASH.isEmpty) && typeof exampleValue !== 'boolean') {\r\n        // if example entity's property is undefined/null/empty then it means the caller wants all the data\r\n        continue;\r\n      }\r\n      if (itemPair.item.hasOwnProperty(key)) {\r\n        // if example entity has additional columns then search fails\r\n        const itemValue = LODASH.cloneDeep(itemPair.item[key]);\r\n        const nextPropertyName = this.getNextPropertyName(propertyName, key);\r\n        const options = this.finalizeOptionsForProperty(commonOptions, propertyOptions, nextPropertyName);\r\n        if (isFunction(options)) { // if user defined predicate is present for property\r\n          const customPredicate = options as PredicateFunc;\r\n          if (!customPredicate(itemValue)) {\r\n            return false;\r\n          }\r\n        } else {\r\n          const columnOptions = options as Options;\r\n          if (this.isAlphaNumeric(itemValue)) {\r\n            const valuePair: ItemPair<string> = {item: itemValue.toString(), example: exampleValue};\r\n            if (!this._alphaNumericService.executeCondition(valuePair, columnOptions)) {\r\n              return false;\r\n            }\r\n          } else if (LODASH.isArray(itemValue)) {\r\n            const valuePair: ItemPair<any[]> = {item: itemValue, example: exampleValue};\r\n            if (!this._arrayService.executeCondition(valuePair, columnOptions)) {\r\n              return false;\r\n            }\r\n          } else if (LODASH.isBoolean(itemValue)) {\r\n            if (itemValue !== exampleValue) {\r\n              return false;\r\n            }\r\n          } else {\r\n            const valuePair: ItemPair<any> = {item: itemValue, example: exampleValue};\r\n            if (!this.filterPredicate(valuePair, propertyOptions, options, nextPropertyName)) {\r\n              // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\r\n              // however if it returns false then the item must not be in the list\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private finalizeOptionsForProperty(commonOptions: Options | PredicateFunc, propertyOptions: PropertyOptions, propertyName: string):\r\n   Options | PredicateFunc {\r\n    if (propertyOptions && propertyOptions.hasOwnProperty(propertyName)) {\r\n      return propertyOptions[propertyName];\r\n    } else {\r\n      return commonOptions;\r\n    }\r\n  }\r\n\r\n  private getNextPropertyName(propertyName: string, key: string): string {\r\n    return propertyName ? (propertyName + '.' + key) : key;\r\n  }\r\n\r\n  public isChanged(oldEntity: any, newEntity: any): boolean {\r\n    return !LODASH.isEqual(this.toPlainJson(oldEntity), this.toPlainJson(newEntity));\r\n  }\r\n\r\n  public toPlainJson(object: any): JSON {\r\n    if (object) {\r\n      return JSON.parse(JSON.stringify(object));\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private isAlphaNumeric(value: any): boolean {\r\n    return LODASH.isString(value) || LODASH.isNumber(value);\r\n  }\r\n}\r\n","import { PropertyOptions } from './property-options';\r\nimport { Directive, DoCheck, Input, ViewContainerRef, Host, Self, Optional } from '@angular/core';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { MatTableFilter } from './mat-table-filter.enum';\r\nimport { MatTableFilterService } from './services/mat-table-filter.service';\r\n\r\n@Directive({\r\n  selector: '[matTableFilter]',\r\n  exportAs: 'matTableFilter'\r\n})\r\nexport class MatTableFilterDirective implements DoCheck {\r\n  private _oldExampleEntity: any;\r\n\r\n  @Input() exampleEntity: any;\r\n\r\n  /**\r\n   * in millis\r\n   */\r\n  @Input() debounceTime = 400;\r\n  @Input() filterType: MatTableFilter = MatTableFilter.ANYWHERE;\r\n  @Input() caseSensitive = false;\r\n  @Input() customPredicate: (data: any) => boolean;\r\n  @Input() propertyOptions: PropertyOptions;\r\n  private _exampleEntitySubject: BehaviorSubject<void>;\r\n\r\n\r\n  constructor(\r\n    private _filterService: MatTableFilterService,\r\n    @Host() @Self() @Optional() private _table: MatTable<any>\r\n  ) {\r\n    this.initDebounceSubject();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this._filterService.isChanged(this._oldExampleEntity, this.exampleEntity)) {\r\n      this._oldExampleEntity = this._filterService.toPlainJson(this.exampleEntity);\r\n      this._exampleEntitySubject.next(undefined);\r\n    }\r\n  }\r\n\r\n\r\n  private initDebounceSubject() {\r\n    this._exampleEntitySubject = new BehaviorSubject<void>(null);\r\n    this._exampleEntitySubject.pipe(\r\n      debounceTime(this.debounceTime))\r\n      .subscribe(_ => {\r\n        this.updateFilterPredicate();\r\n      });\r\n  }\r\n\r\n  private updateFilterPredicate() {\r\n    const matDataSource = this.getMatDataSource();\r\n    if (matDataSource) {\r\n      matDataSource.filterPredicate = this.getFilterPredicate();\r\n      matDataSource.filter = this.exampleEntity as any;\r\n    }\r\n  }\r\n\r\n  private getFilterPredicate() {\r\n    if (this.customPredicate) {\r\n      return this.customPredicate;\r\n    } else {\r\n      return (item: any): boolean => {\r\n        return this._filterService.filterPredicate({ example: this.exampleEntity, item }, this.propertyOptions,\r\n          { filterType: this.filterType, caseSensitive: this.caseSensitive });\r\n      };\r\n    }\r\n  }\r\n\r\n  private getMatDataSource(): MatTableDataSource<any> {\r\n    const matTable = this._table as MatTable<any>;\r\n    return (matTable.dataSource as MatTableDataSource<any>);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTableFilterDirective } from './mat-table-filter.directive';\r\n\r\n@NgModule({\r\n  declarations: [MatTableFilterDirective],\r\n  imports: [\r\n    MatTableModule\r\n  ],\r\n  exports: [MatTableFilterDirective]\r\n})\r\nexport class MatTableFilterModule { }\r\n"]}